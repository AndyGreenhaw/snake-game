[{"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\index.js":"1","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\App.js":"2","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\Components\\Snake.js":"3","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\Components\\Food.js":"4","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\components\\Food.js":"5","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\components\\Snake.js":"6"},{"size":432,"mtime":1611279164097,"results":"7","hashOfConfig":"8"},{"size":6070,"mtime":1615849537344,"results":"9","hashOfConfig":"8"},{"size":430,"mtime":1611284970240,"results":"10","hashOfConfig":"8"},{"size":377,"mtime":1611346212177,"results":"11","hashOfConfig":"8"},{"size":381,"mtime":1615667974467,"results":"12","hashOfConfig":"8"},{"size":546,"mtime":1615684722324,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"10azj0e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"16"},"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\index.js",[],["33","34"],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\App.js",["35","36","37","38","39","40","41","42"],"import React, { Component } from 'react'\nimport Snake from './components/Snake';\nimport Food from './components/Food'\n// import ebbieHead from \"./images/ebbieHead.png\"\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  return [x,y]\n}\n\nconst startingPosition = {\n    food: getRandomCoordinates(),\n    speed: 200,\n    direction: 'RIGHT',\n    snakeDots: [\n      [0,0],\n      [2,0],\n    ],\n}\n\n// 1) CREATE TWO BUTTONS\n  // Start Button: starts the game\n  // Pause Button: pauses game\n// 2) START BUTTON\n  //  3) Make the start button initialize direction and speed\n  //  4) Make start button activate eating self penalty\n// 5) PAUSE BUTTON\n  //  5) Stops snake direction and speed\n  //  6) Stops all penalties\n  //  7) Greys out screen\n\nlet snakeInterval;\n\nclass App extends Component {\n\n  state = {\n    food: getRandomCoordinates(),\n    speed: 200,\n    direction: 'RIGHT',\n    snakeDots: [\n      [0,0],\n      [2,0],\n    ],\n    startButton: \"Start\"\n  }\n\n  componentDidMount() {\n    clearInterval(this.intervalId)\n    setInterval(this.pauseSnake, 200)\n    document.onkeydown = this.onKeyDown\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBounds()\n    this.checkIfCollapsed()\n    this.checkIfEat()\n  }\n\n  startGame = event => {\n    console.log(\"read\")\n    snakeInterval = setInterval(this.moveSnake, 200)\n    document.onkeydown = this.onKeyDown\n  }\n\n  // startGame = event => {\n\n  //   if (this.state.startButton = \"Start\") {\n  //     snakeInterval = setInterval(this.moveSnake, 200)\n  //     document.onkeydown = this.onKeyDown\n  //     this.setState({startButton: \"Pause\"})\n  //     console.log(this.state.start)\n  //   } else if (this.state.startButton = \"Pause\"){\n  //     console.log(\"read\")\n  //     clearInterval(snakeInterval)\n  //     this.setState({startButton: \"Start\"})\n  //   }\n  // }\n\n  pauseGame() {\n    clearInterval(snakeInterval)\n    // this.state.startButton = \"Start\"\n  }\n\n  pauseSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n  }\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    switch (this.state.direction) {\n      case 'RIGHT':\n        head = [head[0] + 2, head[1]];\n        break;\n      case 'LEFT':\n        head = [head[0] - 2, head[1]];\n        break;\n      case 'DOWN':\n        head = [head[0], head[1] + 2];\n        break;\n      case 'UP':\n        head = [head[0], head[1] -2];\n        break;\n    }\n\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      snakeDots: dots\n    })\n  }\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'})\n        // this.ebbieHeadDirection()\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'})\n        // this.ebbieHeadDirection()\n        break;\n      case 37: \n        this.setState({direction: 'LEFT'});\n        // this.ebbieHeadDirection()\n        break;\n      case 39:\n        this.setState({direction: 'RIGHT'})\n        // this.ebbieHeadDirection()\n        break;\n      }\n}\n    // ebbieHeadDirection = () => {\n    //   const ebbieHead = this.state.snakeDots[this.state.snakeDots.length -1]\n    //   console.log(ebbieHead)\n\n    // }\n\n  checkIfOutOfBounds() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0){\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots]\n    let head = snake[snake.length - 1]\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] ==dot[1]) {\n        this.onGameOver();\n      }\n    })\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length -1];\n    let food = this.state.food;\n\n    if (head[0] == food[0] && head[1] == food[1]){\n      this.setState({\n        food: getRandomCoordinates()\n      })\n      this.growSnake()\n      this.increaseSpeed()\n    }\n  }\n\n  growSnake() {\n    let newSnake = [...this.state.snakeDots]\n    newSnake.unshift([])\n    this.setState({\n      snakeDots:newSnake\n    })\n\n    let snakeArray = this.state.snakeDots\n\n    // console.log(snakeArray[snakeArray.length - 1])\n\n  }\n\n  increaseSpeed() {\n    console.log(this.state.speed)\n    let speed = this.state.speed\n\n    if (this.state.speed > 10) {\n      speed -= 10;\n      this.setState({\n        speed\n      })\n    }\n\n    clearInterval(this.intervalId)\n    this.intervalId = setInterval(this.moveSnake, this.state.speed)\n    console.log(this.intervalId)\n\n  }\n\n  onGameOver() {\n    alert(`Game Over. Your score is ${(this.state.snakeDots.length - 2)}`)\n\n    // document.getElementById(\"gameOverSlide\").style.display = 'flex'\n\n    this.setState(startingPosition)\n    clearInterval(snakeInterval) \n  }\n\n  render(){\n    return (\n      <>\n        <div className=\"gameOverSlide\">\n        </div>\n        <div className=\"headSection\">\n          <div className=\"mainSnakeHeadline\">Snake</div>\n        \n          <div className=\"mainSubhead\">Eat the Apples</div>\n        </div>\n        <main id=\"gameArea\">\n          <Snake snakeDots={this.state.snakeDots}/>\n          <Food dot={this.state.food}/>\n        \n        </main>\n        <div className=\"scoreSection\">\n          <div className=\"foodScoreSymbol\"/>\n          <div className=\"scoreCopy\">Score:</div>\n          <div className=\"scoreAmount\">{(this.state.snakeDots.length -2)}</div>\n        </div>\n        <div className=\"buttonSection\">\n            <button \n              className=\"bothStartPauseButtons\" \n              id=\"startButton\"\n              onClick={this.startGame}\n            >\n              {this.state.startButton}\n            </button>\n            <button \n              className=\"bothStartPauseButtons\" \n              id=\"pauseButton\"\n              onClick={this.pauseGame}\n            >\n              Pause\n            </button>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;\n","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\Components\\Snake.js",["43"],"import React from 'react';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div>\r\n            {props.snakeDots.map((dot, i) => {\r\n                const style ={\r\n                    left: `${dot[0]}%`,\r\n                    top: `${dot[1]}%`\r\n                }\r\n                return (\r\n                    <div className=\"snake-dot\" key={i} style={style}></div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}",["44","45"],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\Components\\Food.js",["46","47","48"],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\components\\Food.js",["49","50"],"import React from 'react';\r\nimport cherry from '../images/cherry-one.png'\r\n\r\nexport default (props) => {\r\n\r\n    const style = {\r\n        left: `${props.dot[0]}%`,\r\n        top: `${props.dot[1]}%`\r\n    }\r\n    return(\r\n        <div className=\"snake-food\" \r\n            style={style}\r\n        >\r\n            {/* <img className=\"cherry\" src= {cherry} /> */}\r\n\r\n        </div>\r\n    )\r\n}",["51","52"],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\classwork\\_Games\\snake-game\\src\\components\\Snake.js",["53"],"import React from 'react';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div>\r\n            {props.snakeDots.map((dot, i) => {\r\n                const style ={\r\n                    left: `${dot[0]}%`,\r\n                    top: `${dot[1]}%`\r\n                }            \r\n\r\n                return (\r\n                    <div \r\n                        className=\"snake-dot\" \r\n                        key={i} \r\n                        style={style}\r\n                    ></div>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":89,"column":9,"nodeType":"60","messageId":"61","endLine":89,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":97,"column":5,"nodeType":"64","messageId":"65","endLine":110,"endColumn":6},{"ruleId":"62","severity":1,"message":"63","line":121,"column":5,"nodeType":"64","messageId":"65","endLine":138,"endColumn":8},{"ruleId":"66","severity":1,"message":"67","line":158,"column":19,"nodeType":"68","messageId":"69","endLine":158,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":158,"column":40,"nodeType":"68","messageId":"69","endLine":158,"endColumn":42},{"ruleId":"66","severity":1,"message":"67","line":168,"column":17,"nodeType":"68","messageId":"69","endLine":168,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":168,"column":39,"nodeType":"68","messageId":"69","endLine":168,"endColumn":41},{"ruleId":"58","severity":1,"message":"70","line":184,"column":9,"nodeType":"60","messageId":"61","endLine":184,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":3,"column":1,"nodeType":"73","endLine":17,"endColumn":2},{"ruleId":"54","replacedBy":"74"},{"ruleId":"56","replacedBy":"75"},{"ruleId":"71","severity":1,"message":"72","line":4,"column":1,"nodeType":"73","endLine":18,"endColumn":2},{"ruleId":"58","severity":1,"message":"76","line":6,"column":11,"nodeType":"60","messageId":"61","endLine":6,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":14,"column":13,"nodeType":"79","endLine":14,"endColumn":53},{"ruleId":"58","severity":1,"message":"80","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":4,"column":1,"nodeType":"73","endLine":18,"endColumn":2},{"ruleId":"54","replacedBy":"81"},{"ruleId":"56","replacedBy":"82"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":1,"nodeType":"73","endLine":23,"endColumn":2},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'head' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'snakeArray' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["83"],["84"],"'style' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'cherry' is defined but never used.",["83"],["84"],"no-global-assign","no-unsafe-negation"]